(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();class a{constructor(){this.messages=["Every time I see you smile, my heart skips a beat ❤️","i miss you every minute of my life ","you are so intelligent ","Every moment with you is a moment I treasure forever 💝"],this.isAuthenticated=localStorage.getItem("isAuthenticated")==="true",this.nextRevealTime=Number(localStorage.getItem("nextRevealTime"))||0,this.history=JSON.parse(localStorage.getItem("messageHistory"))||[],this.initializeElements(),this.attachEventListeners(),this.isAuthenticated?this.showMainContent():this.showPasswordPrompt(),setInterval(()=>this.updateTimer(),1e3)}initializeElements(){this.revealButton=document.getElementById("revealButton"),this.timerDisplay=document.getElementById("timer"),this.messageDisplay=document.getElementById("messageDisplay"),this.menuButton=document.getElementById("menuButton"),this.closeMenu=document.getElementById("closeMenu"),this.menu=document.getElementById("menu"),this.messageHistory=document.getElementById("messageHistory"),this.clearHistory=document.getElementById("clearHistory"),this.container=document.querySelector(".container")}showPasswordPrompt(){this.container.style.display="none",this.menuButton.style.display="none",this.menu.style.display="none";const e=document.createElement("div");e.className="password-prompt",e.innerHTML=`
            <div class="password-container">
                <h2>Enter Code to Access Messages</h2>
                <input type="password" id="passwordInput" placeholder="Enter code">
                <button id="submitPassword">Submit</button>
                <p id="errorMessage" style="color: #e91e63; display: none;">Incorrect code. Try again!</p>
            </div>
        `,document.body.appendChild(e);const o=document.getElementById("submitPassword"),i=document.getElementById("passwordInput"),t=document.getElementById("errorMessage");o.addEventListener("click",()=>{i.value==="love69"?(localStorage.setItem("isAuthenticated","true"),e.remove(),this.showMainContent()):(t.style.display="block",i.value="")}),i.addEventListener("keypress",s=>{s.key==="Enter"&&o.click()})}showMainContent(){this.container.style.display="block",this.menuButton.style.display="block",this.menu.style.display="block",this.updateTimer(),this.updateHistory()}attachEventListeners(){this.revealButton.addEventListener("click",()=>this.revealMessage()),this.menuButton.addEventListener("click",()=>this.toggleMenu()),this.closeMenu.addEventListener("click",()=>this.toggleMenu()),this.clearHistory.addEventListener("click",()=>this.clearMessageHistory())}createHeart(){const e=document.createElement("div");e.className="heart",e.textContent="❤️",e.style.left=Math.random()*100+"vw",document.body.appendChild(e),setTimeout(()=>e.remove(),3e3)}revealMessage(){const e=Date.now();if(e<this.nextRevealTime)return;const o=this.messages[Math.floor(Math.random()*this.messages.length)];this.messageDisplay.innerHTML=`<div class="message">${o}</div>`,this.nextRevealTime=e+6e4,localStorage.setItem("nextRevealTime",this.nextRevealTime),this.history.push({message:o,timestamp:new Date().toISOString()}),localStorage.setItem("messageHistory",JSON.stringify(this.history)),this.updateHistory();for(let i=0;i<5;i++)setTimeout(()=>this.createHeart(),i*300)}updateTimer(){const e=Date.now();if(e<this.nextRevealTime){const o=Math.ceil((this.nextRevealTime-e)/1e3);this.timerDisplay.textContent=`Next message in ${o}s`,this.revealButton.disabled=!0}else this.timerDisplay.textContent="",this.revealButton.disabled=!1}toggleMenu(){this.menu.classList.toggle("active")}updateHistory(){this.messageHistory.innerHTML=this.history.map(e=>`
                <div class="history-item">
                    <div>${e.message}</div>
                    <small>${new Date(e.timestamp).toLocaleString()}</small>
                </div>
            `).join("")}clearMessageHistory(){this.history=[],localStorage.removeItem("messageHistory"),this.updateHistory()}}document.addEventListener("DOMContentLoaded",()=>{new a});
